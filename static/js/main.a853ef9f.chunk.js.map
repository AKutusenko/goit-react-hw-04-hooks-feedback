{"version":3,"sources":["components/Statistics/Statistics.module.css","App.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["module","exports","FeedbackOptions","options","addFeedback","map","option","type","onClick","className","s","btn","makeFirstLetterBig","str","toUpperCase","slice","Statistics","good","neutral","bad","total","positivePercentage","wrapper","span","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","app","value","toLowerCase","state","result","Math","floor","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,2B,mBCAzBD,EAAOC,QAAU,CAAC,IAAM,mB,gBCAxBD,EAAOC,QAAU,CAAC,IAAM,+B,4JCET,SAASC,EAAT,GAAoD,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,YACjD,OAAOD,EAAQE,KAAI,SAACC,GAAD,OACjB,wBACEC,KAAK,SACLC,QAAS,kBAAMJ,EAAYE,IAC3BG,UAAWC,IAAEC,IAHf,SAMGC,EAAmBN,IAFfA,MAOX,SAASM,EAAmBC,GAC1B,OAAKA,EAEEA,EAAI,GAAGC,cAAgBD,EAAIE,MAAM,GAFvBF,E,oBCdJ,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,sBAAKZ,UAAWC,IAAEY,QAAlB,UACE,uBAAMb,UAAWC,IAAEa,KAAnB,mBAAgCN,KAChC,uBAAMR,UAAWC,IAAEa,KAAnB,sBAAmCL,KACnC,uBAAMT,UAAWC,IAAEa,KAAnB,kBAA+BJ,KAC/B,uBAAMV,UAAWC,IAAEa,KAAnB,oBAAiCH,KACjC,uBAAMX,UAAWC,IAAEa,KAAnB,gCAA6CF,EAA7C,UCdS,SAASG,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,6BAAKD,IACJC,KCJQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,+BAAOA,ICID,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOb,EAAP,KAAac,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOZ,EAAP,KAAgBc,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOX,EAAP,KAAYc,EAAZ,KAuBMC,EAAqB,WACzB,OAAOjB,EAAOC,EAAUC,GAW1B,OACE,sBAAKV,UAAWC,IAAEyB,IAAlB,UACE,cAACX,EAAD,CAASC,MAAM,wBAAf,SACE,cAACvB,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,YAtCY,SAACgC,GACnB,OAAQA,EAAMC,eACZ,IAAK,OACHN,GAAQ,SAACO,GAAD,OAAWA,EAAQ,KAE3B,MAEF,IAAK,UACHN,GAAW,SAACM,GAAD,OAAWA,EAAQ,KAE9B,MAEF,IAAK,MACHL,GAAO,SAACK,GAAD,OAAWA,EAAQ,KAE1B,MACF,QACE,aAyBF,cAACd,EAAD,CAASC,MAAM,aAAf,SACGS,IACC,cAAClB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,IACPb,mBAxB8B,WACtC,IAAMkB,EAAUtB,EAAOiB,IAAwB,IAC/C,OAAKK,EAGEC,KAAKC,MAAMF,GAFT,EAqBmBG,KAGtB,cAACf,EAAD,CAAcC,QAAQ,2BCxDhCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,W","file":"static/js/main.a853ef9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"Statistics_span__3rLGx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__VV37T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__2ZT-d\"};","import PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nexport default function FeedbackOptions({ options, addFeedback }) {\n  return options.map((option) => (\n    <button\n      type=\"button\"\n      onClick={() => addFeedback(option)}\n      className={s.btn}\n      key={option}\n    >\n      {makeFirstLetterBig(option)}\n    </button>\n  ));\n}\n\nfunction makeFirstLetterBig(str) {\n  if (!str) return str;\n\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div className={s.wrapper}>\n      <span className={s.span}>Good: {good}</span>\n      <span className={s.span}>Neutral: {neutral}</span>\n      <span className={s.span}>Bad: {bad}</span>\n      <span className={s.span}>Total: {total}</span>\n      <span className={s.span}>Positive feedback: {positivePercentage}%</span>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nexport default function Section({ title, children }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nexport default function Notification({ message }) {\n  return <span>{message}</span>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { React, useState } from \"react\";\nimport s from \"./App.module.css\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const addFeedback = (value) => {\n    switch (value.toLowerCase()) {\n      case \"good\":\n        setGood((state) => state + 1);\n\n        break;\n\n      case \"neutral\":\n        setNeutral((state) => state + 1);\n\n        break;\n\n      case \"bad\":\n        setBad((state) => state + 1);\n\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const result = (good / countTotalFeedback()) * 100;\n    if (!result) {\n      return 0;\n    }\n    return Math.floor(result);\n  };\n\n  return (\n    <div className={s.app}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={[\"good\", \"neutral\", \"bad\"]}\n          addFeedback={addFeedback}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport \"modern-normalize/modern-normalize.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}